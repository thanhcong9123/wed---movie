@model AppFilm.Net.Models.SeasonsConnMovie

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css" />
</head>
<style>
    * {
    min-height: 0;
    min-width: 0;
}
    .item-hori {
        text-decoration: none;
        color: #dbdbdb;
        font-weight: 700;
    }
    .item-hori a:hover {
        text-decoration: underline;
    }
    .section {
        padding: 3rem 0.8rem;
        display: block;
    }
    .container {
        margin: 0 auto;
        position: relative;
        width: auto;
    }
    .shiftup {
        margin-top: -360px;
    }
    .tt-details .watch {
        margin-top: 1.5em;
        background-color: #dd003f;
        text-transform: uppercase;
        /* height: 50px; */
        font-size: 1.25rem;
        justify-content: center;

    }
    .button.is-fullwidth {
        display: flex;
        width: 100%;
        color: #fff;


    }
    .watch.button svg {
        margin-right: 20px;
        width: 20px;
    }
    .columns {
        display: flex;
    }
    .subtitle {
        color: #7a7a7a;
        font-size: 30px;
    }
    .subtitle a:hover {
        color: rgb(176, 144, 85);
    }
    .columns.is-variable.is-8 {
        /* Xác định khoảng cách nữa hai cột */
        column-gap: 2rem;
    }
    .columns.is-variable {
        --columnGap: 0.75rem;
        margin-left: calc(-1*var(--columnGap));
        margin-right: calc(-1*var(--columnGap));
    }
    .backdrop {
        height: 600px;
        /* Làm kích thước ảnh thu lại đủ để chu trong khung */
        background-size: cover;
        /* Thuộc tính background-position dùng để thiết lập "vị trí của hình nền" trong phần tử HTML. */
        background-position: 50% 0;
        /* Thuộc tính background-repeat dùng để thiết lập "sự lặp lại của hình nền" cho phần tử HTML. */
        background-repeat: no-repeat;
        /* làm cho phần tử không tác động đến các thẻ khác */
        position: relative;
    }
    .backdrop:before {
        position: absolute;
        content: "";
        width: 100%;
        top: 0;
        bottom: 0;
        background-color: rgba(2, 13, 24, .75);
    }
    .column {
        display: block;
        flex-basis: 0;
        /* Flex-grow sẽ được sử dụng khi tổng kích thước các item trong container của bạn nhỏ hơn kích thước của container và bạn muốn nội dung trong container của mình luôn được lấp đầy. */
        flex-grow: 1;
        /* ngược lại với flex-grow  */
        flex-shrink: 1;
        padding: 0.75rem;
    }
    .columns.is-variable>.column {
        padding-left: var(--columnGap);
        padding-right: var(--columnGap);
    }
    .column.is-one-quarter-tablet {
        flex: none;
        width: 25%;
        min-width: 300px;
    }
    .column.main
    {
        min-width: 600px;
    }
    .div {
        display: block;
    }
    img {
        height: auto;
        /* Làm cho chiều dài anh thay đổi theo kích thước trang */
        max-width: 100%;
    }
    a {
        color: #428bca;
        cursor: pointer;
        text-decoration: none;
    }
    .imdb-icon {
        display: inline-block;
        width: 40px;
        height: 40px;
        /* Thuộc tính vertical-align sắp xếp các nội dung theo chiều dọc.(vertical-align: middle;	Thành phần sẽ được canh giữa theo thành phần bao ngoài.) */
        vertical-align: middle;
        margin: -0.3em 0.6em 0 0;
    }
    .meta {
        padding-bottom: 1em;
    }
    .has-text-weight-bold {
        font-weight: 700 !important;
        padding-top: 4px;
    }
    .span {
        font-style: inherit;
        font-weight: inherit;
    }
    .genres {
        margin-bottom: 50px;
    }
    .level-left {
        align-items: center;
        justify-content: flex-start;
    }
    .level-left .level-item:not(:last-child),
    .level-right .level-item:not(:last-child) {
        margin-right: 0.75rem;
    }
    .button {
        /* -webkit-appearance: none; */
        align-items: center;
        border: 1px solid transparent;
        border-radius: 4px;
        -webkit-box-shadow: none;
        box-shadow: none;
        display: inline-flex;
        font-size: 1rem;
        height: 2.5em;
        justify-content: flex-start;
        line-height: 1.5;
        padding: calc(0.5em - 1px) calc(0.75em - 1px);
        position: relative;
        vertical-align: top;
    }
    /* css cho thẻ chia sẻ fb  */
    .button.is-link {
        background-color: #485fc7;
        border-color: transparent;
        color: #fff;
    }
    .fb-share {
        background-color: rgba(26, 74, 152, .78);
        text-decoration: none;
    }
    .fb-share svg {
        height: 1.3em;
        fill: #fff;
        margin-right: 0.9em;

    }
    .collection-btn svg {
        height: 1.3em;
        fill: #fff;
        margin-right: 0.5em;
    }
    /* css cho thẻ bộ sưu tập */
    .button.is-info.is-outlined {
        background-color: transparent;
        border-color: #3e8ed0;
        color: #3e8ed0;
    }
    .button.is-info.is-outlined:hover {

        background: #3e8ed0;
        color: #fff;
    }
    .has-text-left {
        text-align: left !important;
    }
    .buttons{
        min-width: 450px;
    }
    .buttons .button {
        text-decoration: none;
        margin-right: 0.5rem;
    }
    /* thiết lập màu sắc của thẻ a hiện thị thể loại của phim */
    .button.is-link.is-inverted.is-outlined {
        background-color: transparent;
        border-color: #fff;
        color: #fff;
    }
    /* trỏ vào thẻ a thực hiện đổi màu */
    .button.is-link.is-inverted.is-outlined:hover {
        background: #121212;
        color: #2a61f0;
    }
    .button.is-rounded {
        border-radius: 9999px;
        padding-left: 1.25em;
        padding-right: 1.25em;
    }
    .button.is-small {
        font-size: .75rem;
    }
    .horizontal-dl {
        margin-bottom: 1.5rem;
    }
    .horizontal-dl dt {
        /* Chữ viết hoa */
        text-transform: uppercase;
        color: #7a7a7a;
        /* Làm thẻ dt và dd lên cùng một hàng (Nếu dt ở trên không có dd thì dt ở trên nằm ngang hàng với dt ở dưới)*/
        float: left;
        /* Tạo ra một khoảng cách */
        clear: left;
        width: 120px;
    }
    /* Làm cho thẻ dd là một cột riêng với thẻ dt */
    .horizontal-dl dd {
        float: left;
    }
    .horizontal-dl a {
        color: #dbdbdb;
        font-weight: 700;
    }
    .horizontal-dl a:hover {
        /* trỏ chuột vào hiện thị gạch dưới thẻ a  */
        text-decoration: underline;
    }
    .horizontal-dl {
        /* vì thẻ dl không phải thẻ dev nên dễ bị thẻ dưới tràn lên (Thuộc tính overflow xác định điều gì sẽ xảy ra nếu một thành phần box tràn nội dung.) */
        overflow: auto;
    }
    .intro {
        color: #b5b5b5 !important;
        margin-bottom: 40px;
    }
    .section-header {
        font-weight: 700;
        text-transform: uppercase;
        margin: 2em 0 1.2em;
        font-size: .9em;
    }
    .trailer-item {
        margin-right: 20px;
        position: relative;
        /* height: 0;  */
        overflow: hidden;        
    }
    .trailer-item {
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }
    .image{
        display: inline-block;
        margin: 2px 2px 0.5em;
    }
    .cast figure {
    height: 150px;
    width: 150px;
    position: relative;
    overflow: hidden;
    border-radius: 50%;
}
.tt-details .cast .item {
    text-align: center;
    font-size: .9em;
}
    .trailer-item .icon {
    position: absolute;
    left: 50%;
    top: 50%;
    @* -webkit-transform: translate(-50%,-50%); *@
    transform: translate(-50%,-50%);
    display: none;
    fill: #fff;
    }
    .trailer-item:hover {
        box-shadow: 0 0 0 2px #cc7b19;   
    .icon{
        align-items: center;
        display: inline-flex;
        justify-content: center;
        height: 1.5rem;
        width: 1.5rem;
       }
    }
</style>
<body>

    @if(@Model.Movie != null)
    {
        <div class="backdrop" style="background-image: url(@Model.Movie.Background); "></div>
    }
    <section class="section">
        <div class="container shiftup">
            <div class="tt-details columns is-variable is-8  d-flex flex-wrap">
                <div class="column is-one-quarter-tablet">
                    <p class="cover has-text-centered d-flex" style="flex-shrink: 0;">
                        @if(@Model.Season !=null)
                        {
                            <img style=" background-size: cover; flex-shrink: 0; flex-grow: 1;" src="@Model.Season.imgSS">
                        }
                    </p>

                   <a asp-controller="Movies" asp-action="WatchMovie" asp-route-idMovie="@Model.IdMovie" asp-route-idSS="@Model.IdSeason"  class="watch button countss-is-1 is-danger is-medium is-fullwidth " >
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">
                                        <path
                                            d="M424.4 214.7L72.4 6.6C43.8-10.3 0 6.1 0 47.9V464c0 37.5 40.7 60.1 72.4 41.3l352-208c31.4-18.5 31.5-64.1 0-82.6z">
                                        </path>
                                    </svg>
                                     Xem Phim
                                </a>

                </div>
                <div class="column main">
                    <h1 class="title">
                        @Html.DisplayFor(m => Model.Movie.NameEL) (Season @Html.DisplayFor(m => Model.Season.NameSS))
                    </h1>
                    <div class="d-flex">
                        <h2 class="subtitle">
                            @Html.DisplayFor(m => Model.Movie.NameVN)  (Phần @Html.DisplayFor(m => Model.Season.NameSS))
                            <a asp-action="Index" asp-route-yearTostring="@Model.Movie.ReleaseDate.Year"
                                style="text-decoration: none; ">(@Model.Movie.ReleaseDate.Year)</a>
                        </h2>

                    </div>

                    <div class="d-flex meta">
                        <span class="imdb-icon" style="">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48">
                                <path
                                    d="M44 13H4c-2.2 0-4 1.8-4 4v16c0 2.2 1.8 4 4 4h40c2.2 0 4-1.8 4-4V17c0-2.2-1.8-4-4-4z"
                                    fill="#ffc107"></path>
                                <path
                                    d="M28.102 18h-3.704v13.102h3.704c2 0 2.796-.403 3.296-.704.602-.398.903-1.097.903-1.796v-7.903c0-.898-.403-1.699-.903-2-.796-.5-1.097-.699-3.296-.699zm.699 10.3c0 .598-.7.598-1.301.598V20c.602 0 1.3 0 1.3.602zM33.8 18v13.3h2.802s.199-.902.398-.698c.398 0 1.5.597 2.2.597.698 0 1.1 0 1.5-.199.6-.398.698-.7.698-1.3v-7.802c0-1.097-1.097-1.796-2-1.796-.898 0-1.796.597-2.199.898v-3zm3.598 4.2c0-.4 0-.598.403-.598.199 0 .398.199.398.597v6.602c0 .398 0 .597-.398.597-.2 0-.403-.199-.403-.597zM22.7 31.3V18h-4.4l-.8 6.3-1.102-6.3h-4v13.3h2.903v-7.402l1.3 7.403h2l1.297-7.403v7.403zM7.602 18h3.097v13.3H7.602z"
                                    fill="#263238"></path>
                            </svg>
                        </span>
                        <span class="has-text-weight-bold">
                            @Html.DisplayFor(m => Model.Movie.Point)
                        </span>

                    </div>
                    <div class="d-flex justify-content-between level genres d-flex flex-wrap">
                        <div class="d-flex justify-content-between level-left">
                            <div class="level-item">
                                <a href="" class="fb-share button is-link" target="_blank">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">
                                        <path
                                            d="M448 80v352c0 26.5-21.5 48-48 48h-85.3V302.8h60.6l8.7-67.6h-69.3V192c0-19.6 5.4-32.9 33.5-32.9H384V98.7c-6.2-.8-27.4-2.7-52.2-2.7-51.6 0-87 31.5-87 89.4v49.9H184v67.6h60.9V480H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48z">
                                        </path>
                                    </svg>
                                    Chia sẻ
                                </a>
                            </div>
                            <div class="level-item">
                                <div class="">
                                    @* <button class="collection-btn button is-info is-outlined unadded"
                                        data-toggle="dropdown" id="menu">
                                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512">
                                            <path d="M368 224H224V80c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v144H16c-8.84 0-16
                                    7.16-16 16v32c0 8.84 7.16 16 16 16h144v144c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16
                                    16-16V288h144c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z">
                                            </path>
                                        </svg>
                                        Bộ sưu tập
                                    </button>
                                    <div class="dropdown-menu sub-menu">
                                        <div class="dropdown-content has-text-left"><a href="#"
                                                class="dropdown-item">Thêm vào danh sách phim <strong>Đã Xem</strong></a><a href="#" class="dropdown-item">Thêm vào danh sách phim <strong>Muốn xem</strong></a></div>
                                    </div> *@
                                </div>
                            </div>
                        </div>
                        <div class="d-flex justify-content-between level-right">
                            <div class="level-item buttons">
                                @{
                                    var genreConnMovie = ViewBag.Genres;
                                    if (genreConnMovie != null)
                                    {
                                        foreach (var item in genreConnMovie)
                                        {
                                            <div class="button is-link is-small is-rounded is-inverted is-outlined">
                                                <a asp-action="Index" asp-route-theLoaiTostring="@item.Genre.NameGenre"
                                                    style="text-decoration: none; color: #fff;">
                                                    @item.Genre.NameGenre
                                                </a>
                                            </div>
                                        }
                                    }
                                }
                            </div>
                        </div>
                    </div>
                    <dl class="horizontal-dl">
                        
                        <dd>
                            @{
                                var listDirector = ViewBag.PeoplesDirector;
                                foreach (var item in listDirector)
                                {
                                    <dt>
                                        Đạo diễn
                                    </dt>
                                    <a class="item-hori" asp-controller="Peoples" asp-action="Details"
                                    asp-route-id="@item.People.Id">@item.People.NamePeople </a>
                                }
                            }
                        </dd>
                        @{
                            
                            <dd>
                                @foreach (var item in listDirector)
                                {
                                    <dt>
                                        Biên kịch
                                    </dt>
                                    <a class="item-hori" asp-controller="Peoples" asp-action="Details"
                                     asp-route-id="@item.People.Id">@item.People.NamePeople </a>
                                }
                            </dd>
                        }
                        <dt>
                            Quốc gia
                        </dt>
                        <dd>
                            @{
                                var listNation = ViewBag.ListMovieConnNation;
                                foreach (var item in listNation)
                                {
                                    <a class="item-hori" asp-action="Index"
                                        asp-route-nationPostTostring="@item.Nation.NameNation">@item.Nation.NameNation</a>
                                }
                            }
                        </dd>
                        <dt>
                            Khởi chiếu
                        </dt>
                        <dd>
                            @Model.Movie.ReleaseDate
                        </dd>
                    </dl>
                    <div class="intro">
                        @Model.Movie.Content
                    </div>
                    <h3 class="section-header">Diễn viên</h3>
                    <div class="list-Performer cast">
                        <div class="performer">
                            @{
                                var listPerformer = ViewBag.PeoplesPerformer;
                                foreach (var item in listPerformer)
                                {
                                    <div >
                                        <div class="item" tabindex="-1" style="width: 100%; display: inline-block;">
                                           <a class="image" asp-controller="Peoples" asp-action="Details"
                                            asp-route-id="@item.People.Id">
                                            <figure>
                                                <img src="@item.People.Image" alt="">
                                            </figure>
                                            </a>
                                            <a asp-controller="Peoples" asp-action="Details"
                                                    asp-route-id="@item.People.Id" style="color: #fff;">
                                                    <p >@item.People.NamePeople</p></a>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                    <h3 class="section-header">Trailer</h3>
                    <div class="list-Performer">
                        <div class="list-trailers">
                            @{
                                var listTrailer = ViewBag.ListTrailers;
                                foreach (var item in listTrailer)
                                {
                                    <div style="padding: 2px 1.5em 0 2px;">
                                        <div class="trailer-item"  id="video_@item.Trailers.Link" onclick="playYT('@item.Trailers.Link')" tabindex="-1" style="width: 100%; display: inline-block;">
                                        <img src="@item.Trailers.Img">
                                        <div class="icon">
                                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M424.4 214.7L72.4 6.6C43.8-10.3 0 6.1 0 47.9V464c0 37.5 40.7 60.1 72.4 41.3l352-208c31.4-18.5 31.5-64.1 0-82.6z"></path></svg>
                                        </div>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                    <h3 class="section-header">Episode</h3>
                    <div class="list-episode">
                             @if(ViewBag.Episode != null)
                            {
                                var episode = ViewBag.Episode;
                                @foreach(var item in episode)
                                {
                                    <div class="item-episode m-3 d-flex">
                                        @if(item.ImgEpisodes == null)
                                        {
                                            <div class="img-episode me-3">
                                                <img src="https://i.imgur.com/wLJJctg.png" height="85px" width="155px">
                                            </div>
                                            <div class="">
                                                <h3 style="font-size: 1rem;">Tập @item.Episodes : @item.NameEPISODE</h3>
                                                <span style="color: #b5b5b0;">@item.ReleaseDate</span>
                                            </div>
                                        }
                                        @if(item.ImgEpisodes != null)
                                        {
                                            <div class="img-episode me-3 d-flex">
                                                <img src="@item.ImgEpisodes" style="max-height: 85px; flex-grow: 1; flex-shrink: 0;" height="85px" width="155px">
                                            </div>
                                            <div class="">
                                                <h3 style="font-size: 1rem;">Tập @item.Episodes : @item.NameEPISODE</h3>
                                                <span style="color: #b5b5b0;">@item.ReleaseDate</span>
                                            </div>
                                        }

                                   </div>           
                                }
                            }
                            
                        
                    </div>
                    <div id="modal-root">
                            <div class="modal" id="modal-trailer">
                                <div class="modal-br" id="modal-br-trailer"></div>
                                <div class="modal-content">
                                    <div id="link-yt">
                                        
                                    </div>
                                </div>
                        </div>
                    </div>
                    
                </div>
            </div>
        </div>
    </section>

    <style>
        .modal-br {
            background-color: rgba(10, 10, 10, .86);
            bottom: 0;
            left: 0;
            position: absolute;
            right: 0;
            top: 0;
        }
        .modal {
            align-items: center;
            display: none;
            flex-direction: column;
            justify-content: center;
            overflow: hidden;
            position: fixed;
            z-index: 10000;
        }
        .modal-content {
            margin: 0 auto;
            max-height: calc(100vh - 40px);
            width: auto;
        }
        .modal-content {
            overflow: auto;
            position: relative;

        }
        .box {
            background-color: #363636;
            border-radius: 6px;
            -webkit-box-shadow: 0 0.5em 1em -0.125em rgba(10, 10, 10, .1), 0 0 0 1px rgba(10, 10, 10, .02);
            box-shadow: 0 0.5em 1em -0.125em rgba(10, 10, 10, .1), 0 0 0 1px rgba(10, 10, 10, .02);
            color: #4a4a4a;
            display: block;
            padding: 1.25rem;
        }
        .active {
            display: flex;
        }
    </style>
</body>
<script type="text/javascript" src="https://code.jquery.com/jquery-1.11.0.min.js"></script>
<script type="text/javascript" src="https://code.jquery.com/jquery-migrate-1.2.1.min.js"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js"></script>
<script>
    //Video Youtube
    var modaltrailer = document.getElementById("modal-trailer");
    function playYT(id)
    {
        let html = '<iframe width="1000px" height="600px" src="https://www.youtube.com/embed/'+id+'?autoplay=1" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" ></iframe>'
        document.getElementById('link-yt').innerHTML = html;    
        modaltrailer.classList.add('active');
    }
    var backdroptrailer = document.getElementById("modal-br-trailer");
    backdroptrailer.onclick = function () {
        document.getElementById('link-yt').innerHTML = "";   
        modaltrailer.classList.remove('active'); 
    };
    //
    var bottunwatch = document.getElementById("countss-is-more-than-1");
    var modal = document.getElementById("modal");
    var modalbr = document.getElementById("modal-br");
  
    
    
    $('.list-trailers').slick({
        infinite: true,
        slidesToShow: 4,
        slidesToScroll: 4,
        nextArrow: `<div class=" slick-arrow click-previous">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512">
                        <path
                        d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941
                        0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484
                        101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941
                        0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z">
                        </path>
                        </svg>
                        </div> `,
        prevArrow: `<div class="slick-arrow click-next  pull-right type='button'">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512">
                        <path
                        d="M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04
                        33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57
                        9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z">
                        </path>
                        </svg>
                        </div> `
    });
    $('.performer').slick({
        infinite: true,
        slidesToShow: 4,
        slidesToScroll: 4,
        nextArrow: `<div class=" slick-arrow click-previous">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512">
                        <path
                        d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941
                        0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484
                        101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941
                        0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z">
                        </path>
                        </svg>
                        </div> `,
        prevArrow: `<div class="slick-arrow click-next  pull-right type='button'">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512">
                        <path
                        d="M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04
                        33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57
                        9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z">
                        </path>
                        </svg>
                        </div> `
    });
</script>
<style>
    .slick-arrow {
        width: 10px;
    }
    .slick-arrow {
        fill: #fff;
        position: absolute;
        top: -2.2em;
        right: 0;
        cursor: pointer;
    }
    .slick-arrow.click-next
    {
        right: 30px;
    }
</style>